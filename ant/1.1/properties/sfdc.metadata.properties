# Copyright 2011 Red Hat Inc.
#
# This file is part of solenopsis
#
# solenopsis is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA


#
# Metadata info can be found here:
#     http://www.salesforce.com/us/developer/docs/api_meta/Content/file_based.htm
#
# The properties found here are fairly constant for the Solenopsis project...
# Project specific properties are computed outside this property file...
#

#
# List of all subdirectories who are folder based...  The
# actual meta data can be found in the sf.metadata.[dir name]
# properties defined below...
#
sf.dirs.folderBased    = dashboards documents email reports
sf.dirs.nonFolderBased = assignmentRules escalationRules applications classes components datacategorygroups entitlementTemplates homePageComponents homePageLayouts labels layouts letterhead objects objectTranslations pages portals profiles remoteSiteSettings reportTypes scontrols sites staticresources tabs triggers weblinks workflows permissionsets


#
# All the supported directories - each directory has a corresponding metadata name.
# Look to the properties entitles sf.metadata.[director name] or sf.dir.[metadata name]
#
sf.dirs = ${sf.dirs.folderBased} ${sf.dirs.nonFolderBased}

#
# The files to include based on sf.includes.[dir name]
#
sf.includes.assignmentRules    = *.assignmentRules
sf.includes.escalationRules    = *.escalationRules
sf.includes.applications       = *.app
sf.includes.classes            = *.cls
sf.includes.components         = *.component
sf.includes.dashboards         = **/*
sf.includes.documents          = **/*
sf.includes.email              = *-meta.xml **/*.email-meta.xml
sf.includes.homePageComponents = *.homePageComponent
sf.includes.homePageLayouts    = *.homePageLayout
sf.includes.labels             = *.labels
sf.includes.layouts            = *.layout
sf.includes.objects            = *.object
sf.includes.objectTranslations = *.objectTranslation
sf.includes.pages              = *.page
sf.includes.permissionsets     = *.permissionset
sf.includes.portals            = *.portal
sf.includes.profiles           = *.profile
sf.includes.remoteSiteSettings = *.remoteSite
sf.includes.reports            = *.report **/*.report
sf.includes.reportTypes        = *.reportType
sf.includes.staticresources    = *.resource
sf.includes.tabs               = *.tab
sf.includes.triggers           = *.trigger
sf.includes.weblinks           = *.weblink
sf.includes.workflows          = *.workflow

#
# The suffixes to remove based on sf.suffix.[dir name]
#
sf.suffix.assignmentRules    = .assignmentRules
sf.suffix.escalationRules    = .escalationRules
sf.suffix.applications       = .app
sf.suffix.classes            = .cls
sf.suffix.components         = .component
sf.suffix.documents          = -meta.xml
sf.suffix.email              = email-meta.xml -meta.xml .email
sf.suffix.homePageComponents = .homePageComponent
sf.suffix.homePageLayouts    = .homePageLayout
sf.suffix.labels             = .labels
sf.suffix.layouts            = .layout
sf.suffix.objects            = .object
sf.suffix.objectTranslations = .objectTranslation
sf.suffix.pages              = .page
sf.suffix.permissionsets     = .permissionset
sf.suffix.portals            = .portal
sf.suffix.profiles           = .profile
sf.suffix.remoteSiteSettings = .remoteSite
sf.suffix.reports            = .report
sf.suffix.reportTypes        = .reportType
sf.suffix.staticresources    = .resource
sf.suffix.tabs               = .tab
sf.suffix.triggers           = .trigger
sf.suffix.weblinks           = .weblink
sf.suffix.workflows          = .workflow

#
# When performing diffs, these are the directories
# to exclude
#
sf.diff.dir.excludes = *.profile

#
# The dirs that support diffs...
#
#sf.diff.dirs = objects workflows permissionsets
sf.diff.dirs = objects workflows

sf.diff.property.objects-CustomObject.actionOverrides.actionName = ActionOverride
sf.diff.property.objects-CustomObject.businessProcesses.fullName = BusinessProcess
sf.diff.property.objects-CustomObject.fields.fullName            = CustomField
sf.diff.property.objects-CustomObject.listViews.fullName         = ListView
sf.diff.property.objects-CustomObject.namedFilters.fullName      = NamedFilter
sf.diff.property.objects-CustomObject.recordTypes.fullName       = RecordType
sf.diff.property.objects-CustomObject.validationRules.fullName   = ValidationRule
sf.diff.property.objects-CustomObject.webLinks.fullName          = WebLink

sf.diff.property.workflows-Workflow.alerts.fullName       = WorkflowAlert
sf.diff.property.workflows-Workflow.fieldUpdates.fullName = WorkflowFieldUpdate
sf.diff.property.workflows-Workflow.rules.fullName        = WorkflowRule

sf.diff.property.permissionsets-PermissionSet.classAccesses.apexClass  = PermissionSetApexClassAccess
sf.diff.property.permissionsets-PermissionSet.fieldPermissions.field   = PermissionSetFieldPermissions
sf.diff.property.permissionsets-PermissionSet.objectPermissions.object = PermissionSetObjectPermissions
sf.diff.property.permissionsets-PermissionSet.pageAccesses.apexPage    = PermissionSetApexPageAccess
sf.diff.property.permissionsets-PermissionSet.userPermissions.name     = PermissionSetUserPermission

sf.diff.metadata.objects = CustomObject.actionOverrides.actionName CustomObject.businessProcesses.fullName CustomObject.fields.fullName CustomObject.listViews.fullName CustomObject.namedFilters.fullName CustomObject.recordTypes.fullName CustomObject.validationRules.fullName CustomObject.webLinks.fullName

sf.diff.metadata.workflows = Workflow.alerts.fullName Workflow.fieldUpdates.fullName Workflow.rules.fullName

sf.diff.metadata.permissionsets = PermissionSet.classAccesses.apexClass PermissionSet.fieldPermissions.field PermissionSet.objectPermissions.object PermissionSet.pageAccesses.apexPage PermissionSet.userPermissions.name

#
# The metadata properties - the directory name is contained
# within the property named sf.metadata.[dir name] and the
# XML name is the value...
#
sf.metadata.assignmentRules      = AssignmentRules
sf.metadata.escalationRules      = EscalationRules
sf.metadata.applications         = CustomApplication
sf.metadata.classes              = ApexClass
sf.metadata.components           = ApexComponent
sf.metadata.dashboards           = Dashboard
sf.metadata.datacategorygroups   = DataCategoryGroup
sf.metadata.documents            = Document
sf.metadata.email                = EmailTemplate
sf.metadata.entitlementTemplates = EntitlementTemplate
sf.metadata.homePageComponents   = HomePageComponent
sf.metadata.homePageLayouts      = HomePageLayout
sf.metadata.labels               = CustomLabels
sf.metadata.layouts              = Layout
sf.metadata.letterhead           = Letterhead
sf.metadata.objects              = CustomObject
sf.metadata.objectTranslations   = CustomObjectTranslation
sf.metadata.pages                = ApexPage
sf.metadata.permissionsets       = PermissionSet
sf.metadata.portals              = Portal
sf.metadata.profiles             = Profile
sf.metadata.remoteSiteSettings   = RemoteSiteSetting
sf.metadata.reports              = Report
sf.metadata.reportTypes          = ReportType
sf.metadata.scontrols            = Scontrol
sf.metadata.sites                = CustomSite
sf.metadata.staticresources      = StaticResource
sf.metadata.tabs                 = CustomTab
sf.metadata.triggers             = ApexTrigger
sf.metadata.weblinks             = CustomPageWebLink
sf.metadata.workflows            = Workflow

#
# The directories for which metadata is mapped.  The property
# named sf.dir.[meta data] has as its value the directory for
# which it is mapped.
#
sf.dir.AssignmentRules         = assignmentRules
sf.dir.EscalationRules         = escalationRules
sf.dir.CustomApplication       = applications
sf.dir.ApexClass               = classes
sf.dir.ApexComponent           = components
sf.dir.Dashboard               = dashboards
sf.dir.DataCategoryGroup       = datacategorygroups
sf.dir.Document                = documents
sf.dir.EmailTemplate           = email
sf.dir.EntitlementTemplate     = entitlementTemplates
sf.dir.HomePageComponent       = homePageComponents
sf.dir.HomePageLayout          = homePageLayouts
sf.dir.CustomLabels            = labels
sf.dir.Layout                  = layouts
sf.dir.Letterhead              = letterhead
sf.dir.CustomObject            = objects
sf.dir.CustomObjectTranslation = objectTranslations
sf.dir.PermissionSet           = permissionsets
sf.dir.ApexPage                = pages
sf.dir.Portal                  = portals
sf.dir.Profile                 = profiles
sf.dir.RemoteSiteSetting       = remoteSiteSettings
sf.dir.Report                  = reports
sf.dir.ReportType              = reportTypes
sf.dir.Scontrol                = scontrols
sf.dir.CustomSite              = sites
sf.dir.StaticResource          = staticresources
sf.dir.CustomTab               = tabs
sf.dir.ApexTrigger             = triggers
sf.dir.CustomPageWebLink       = weblinks
sf.dir.Workflow                = workflows


#
# Fixed members for objects.
#
sf.members.objects.values = Account AccountContactRole Activity Asset Campaign CampaignMember Case CaseComment CaseContactRole Contact ContentVersion Contract ContractContactRole ContractLineItem Entitlement EntitlementContact Event Idea Lead LiveChatTranscript LiveChatTranscriptEvent LiveChatVisitor Opportunity OpportunityContactRole OpportunityLineItem PartnerRole Product2 ServiceContract Site Solution Task User UserLicense
sf.members.objects.name = sf.metadata.objects

#
# The members for whom special processing is required.  The value is a list of
# properties names that should be iterated upon for their values...
#
sf.members = sf.members.objects

#
# Denotes which directories support an "all" deploy/retrive.
#
sf.all = assignmentRules escalationRules classes objects components pages triggers applications labels objectTranslations weblinks sites tabs datacategorygroups entitlementTemplates homePageComponents homePageLayouts layouts permissionsets portals profiles remoteSiteSettings report reportTypes scontrols staticResources translations workflows

#
# Additional ancillary properties
#
sf.version   = 26.0
sf.namespace = http://soap.sforce.com/2006/04/metadata
